CONTRACT_TYPE
{
	name = MunBaseCreate	  
    title = Mun Base Creation 
    group = MunBase
	description = Our engineers were thinking on a way to have kerbals on the Mun and stay there for long terms. So that is why we need you.
    notes = Put a new base on the Mun surface near the MunRover.
    synopsis = We want you to start the creation of the Mun Base.   
    completedMessage = You have Create the initial stage of the Mun Base.
    minExpiry = 0.0
    maxExpiry = 7.0
    deadline = Random(500,1000)
    cancellable = true
    declinable = true 
    autoAccept = false
    prestige = Exceptional   
    targetBody = Mun    
    maxCompletions = 2
	maxSimultaneous = 100    
    rewardScience = 110.0
    rewardReputation = 20.0
    rewardFunds = Random(100000, 200000)
    failureReputation = 10.00
    failureFunds = 100000.0
    advanceFunds = 1000.0
    weight = 15.0
    DATA	
    {
	    type = Vessel
		uniqueValue = true
        targetVessel = [ RoverMun1 ].Random()
	}    
	DATA
    {
        type = Vessel
        requiredValue = false
        targetVessel1 = [ MunBase1 ].Random()
    }	
	DATA
	{
        type = Location
		vesselLocation = @targetVessel.Location()
    }

    BEHAVIOUR
   {
        name = WaypointGenerator
		type = WaypointGenerator
		WAYPOINT
        {    name = Base Landing Spot
		     targetBody = Mun
			 icon = balloon
			 altitude = 0.0
			 latitude = @/vesselLocation.Latitude()
			 longitude = @/vesselLocation.Longitude()
        }
    }
	PARAMETER
    {
        name = NewBase
        type = VesselParameterGroup
        hideChildren = false
        title = Launch a new base into Kerbin orbit
		define = MunBase1
        notes = The base must be unmanned, support 4 Kerbals and have a way to generate electric charge.
		
	    PARAMETER
        {
            name = HabModule
            type = HasCrewCapacity        
            minCapacity = 4
            title = Support 4 Kerbals
        }
        PARAMETER
		{
            name = HasCrew
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}		
		PARAMETER
        {
            name = Any
	        type = Any
	        hideChildren = true	
			title = Can Generate Power
		
		    PARAMETER
			{
                name = Solar
				type = PartValidation
				hideChildren = true
				partModule = ModuleDeployableSolarPanel
				minCount = 1 	     
	        }
			PARAMETER
			{
                name = Generator
				type = PartValidation
				hideChildren = true
				partModule = ModuleGenerator
				minCount = 1 	     
	        }
			PARAMETER
			{
                name = Generator
				type = PartValidation
				hideChildren = true
				part = FuelCell
				minCount = 1 	     
	        }
			PARAMETER
			{
                name = Generator
				type = PartValidation
				hideChildren = true
				part = FuelCellArray
				minCount = 1 	     
	        }    
        }
		PARAMETER
        {
            name = Orbit
			title = Orbit Kerbin
			notes = The Ap and Pe must be above the atmosphere height
			type = Orbit
			targetBody = Kerbin
			minAltitude = @/targetBody.AtmosphereAltitude()		
        }
	}	
	PARAMETER
    {
        name = ReachState
		type = ReachState
		targetBody = Mun
		title = Get to the Mun
    }
    PARAMETER
    {
        name = Land       
        type = ReachState		
		title = Land on the Mun
		targetBody = Mun
		situation = LANDED
		
    }	
    PARAMETER
    {
        name = VisitWaypoint
		type = VisitWaypoint
		index = 0
		distance = 100.0
		title = Land near the Mun Rover 
	}	
	REQUIREMENT
    {
        name = Orbit
        type = Orbit        
        targetBody = Mun
    }
    REQUIREMENT
    {
        name = NoBase
        type = Expression
        expression = (!@/targetVessel1.IsLanded())
    }
	REQUIREMENT
    {
        name = CompleteContract
        type = CompleteContract
        contractType = MunBaseRover
        minCount = 1
        cooldownDuration = 0s
    }
}
}