CONTRACT_TYPE:NEEDS[TACLifeSupport|LifeSupport|IFILifeSupport]
{
    name = BaseResupply
    title = Do a supply run to @/targetVessel1 .
    group = BaseMaintenance
	description = Our Kerbonauts are starving so we need you to take some supplies down to @/targetVessel1 .
    notes = The Base are requesting food but is too expensive so bring them no too much.
    synopsis = Take supplies down to @/targetVessel1 .
    completedMessage = Finally our kerbals are eating something.
    minExpiry = 1
    maxExpiry = 7
    deadline = Random(500, 1000)
    cancellable = true
    declinable = true
	maxSimultaneous = 1
    rewardScience = 0.0
    rewardReputation = Random(10.0, 20.0)
    rewardFunds = Random(40000, 60000.0)
    failureReputation = Random(5, 10.0)
    failureFunds = Random(1000, 10000.0)
    advanceFunds = Random(1000, 10000.0)
	targetBody = @/targetBody
    weight = 5.0
	DATA
    {
        type = Vessel
		requiredValue = true
		targetVessel1 = [ Any ].Where(v => v.IsLanded()).Where(v => v.VesselType()== Base).Concat([ Base1 ]).Where(v => v.CrewCount()>= 1).Random()
    }
	DATA
	{
	    type = CelestialBody
		requiredValue = true
		targetBody = @/targetVessel1.CelestialBody()
	}
	DATA
    {
        type = CelestialBody
        requiredValue = false
        targetBody2 = HomeWorld()
    }
    DATA
	{
        type = Location
		vesselLocation = @/targetVessel1.Location()	
    }
	PARAMETER
    {
        name = NewVessel3
        type = VesselParameterGroup
        hideChildren = true
        title = Launch a new base phase into @/targetBody2 orbit
		notes = The base phase must have a way to generate electric charge.
        PARAMETER
		{
            name = NewVessel
			type = NewVessel 
			title = Launch a new Vessel
		}		
		PARAMETER
        {
            name = Any
			type = Any
			hideChildren = true		
			title = Can Generate Power
			PARAMETER
			{
                name = Solar
				title = Solar
				type = PartValidation
				hideChildren = true
				partModule = ModuleDeployableSolarPanel
				minCount = 1 	     
			}
			PARAMETER
			{
                name = Generator
				title = RTG
				type = PartValidation
				hideChildren = true
				partModule = ModuleGenerator
				minCount = 1 
			}
			PARAMETER
			{
                name = Generator1
				title = Fuel Cell
				type = PartValidation
				hideChildren = true
				part = FuelCell
				minCount = 1 	
			}
			PARAMETER
			{
                name = Generator2
				title = Fuel Cell Array
				type = PartValidation
				hideChildren = true
				part = FuelCellArray
				minCount = 1
			}    
        }
		PARAMETER
        {
            name = Orbit
			title = Orbit @/targetBody2
			notes = The Ap and Pe must be above the atmosphere height
			type = Orbit
			targetBody = @/targetBody2
			minAltitude = @/targetBody2.AtmosphereAltitude()		
        }
	}
	PARAMETER:NEEDS[TACLifeSupport]
	{
	    name = Food
		type = HasResource
		resource = Food
		minQuantity = 10
		title = Have at least 10 food on board your vessel
	}	
	PARAMETER:NEEDS[LifeSupport]
	{
	    name = Supplies
		type = HasResource	
		resource = Supplies
		minQuantity = 10
		title = Have at least 10 Supplies on board your vessel
	}
	PARAMETER:NEEDS[IFILifeSupport]
	{
	    name = LifeSupport
		type = HasResource
		resource = LifeSupport
		minQuantity = 10
	    title = Have at least 10 LifeSupport on board your vessel
	}
	PARAMETER
    {
        name = VisitWaypoint
		type = VisitWaypoint
		index = 0
		distance = 100.0
		title = Land near @/targetVessel1 
	}
	 BEHAVIOUR
    {
        name = WaypointGenerator
		type = WaypointGenerator
		WAYPOINT
        {    name = Base
		     targetBody = @/targetBody
			 icon = balloon
			 altitude = 0.0
			 latitude = @/vesselLocation.Latitude()
			 longitude = @/vesselLocation.Longitude()
        }
    }
	REQUIREMENT
    { 
        name = CompleteContract
		type = CompleteContract
		contractType = BaseResupply
		minCount = 0
		cooldownDuration = 4d
    }
}