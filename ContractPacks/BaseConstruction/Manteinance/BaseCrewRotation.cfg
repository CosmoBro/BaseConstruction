CONTRACT_TYPE
{
    name = BaseCrewRotation
    title = Do a crew rotation to @/targetVessel1.
    group = BaseMaintenance
	description = Oh no, @/targetKerbal1 forgot his marriage anniversary so bring him back to @/targetBody2 right now. Also @/targetKerbal2 is feeling a little homesick so bring him back too.
    synopsis = Bring back to @/targetBody2 @/targetKerbal1 and @/targetKerbal2 .
    completedMessage = Uff @/targetKerbal1 would like to thank you. He get just in time.
    minExpiry = 1
    maxExpiry = 7
    deadline = Random(500, 700)
    cancellable = true
    declinable = true
	maxSimultaneous = 1
    rewardScience = 0.0
    rewardReputation = Random(10.0, 20.0)
    rewardFunds = Random(40000, 60000.0)
    failureReputation = Random(5, 10.0)
    failureFunds = Random(1000, 10000.0)
    advanceFunds = Random(1000, 10000.0)
    weight = 5.0
	DATA
    {
        type = Vessel
		requiredValue = true
		targetVessel1 = [ Any ].Where(v => v.IsLanded()).Where(v => v.VesselType()== Base).Concat([Base1]).Where(v => v.CrewCount()>=2).Random()
    }	
	DATA
	{
        type = CelestialBody
		requiredValue = true
		targetBody1 = @/targetVessel1.CelestialBody()
    }
	DATA
    {
        type = CelestialBody
        requiredValue = false
        targetBody2 = HomeWorld()
    }
	DATA
	{
		type = Kerbal
		uniqueValue = true
		targetKerbal1 = @/targetVessel1.Crew().Random()
	}
	DATA
	{
		type = Kerbal
		uniqueValue = true
		targetKerbal2 = @/targetVessel1.Crew().Random()
	}
    DATA
	{
        type = Location
		vesselLocation = @/targetVessel1.Location()	
    }
	PARAMETER
    {
        name = NewBaseRotation
        type = VesselParameterGroup
        hideChildren = false
        title = Launch a new vessel into @/targetBody2 orbit
        notes = The base phase must have a way to generate electric charge.	
		PARAMETER
        {
            name = Any
			type = Any
			hideChildren = true		
			title = Can Generate Power
			PARAMETER
			{
                name = Solar
				title = Solar
				type = PartValidation
				hideChildren = true
				partModule = ModuleDeployableSolarPanel
				minCount = 1 	     
			}
			PARAMETER
			{
                name = Generator
				title = RTG
				type = PartValidation
				hideChildren = true
				partModule = ModuleGenerator
				minCount = 1 
			}
			PARAMETER
			{
                name = Generator1
				title = Fuel Cell
				type = PartValidation
				hideChildren = true
				part = FuelCell
				minCount = 1 	
			}
			PARAMETER
			{
                name = Generator2
				title = Fuel Cell Array
				type = PartValidation
				hideChildren = true
				part = FuelCellArray
				minCount = 1
			}    
        }
		PARAMETER
        {
            name = Orbit
			title = Orbit @/targetBody2
			notes = The Ap and Pe must be above the atmosphere height
			type = Orbit
			targetBody = @/targetBody2
			minAltitude = @/targetBody2.AtmosphereAltitude()		
        }
	}
	PARAMETER
    {
        name = Sequence
		type = Sequence
		title = Do a crew rotation
		PARAMETER
		{
            name = HasCrew
			type = HasCrew
			disableOnStateChange = true
			minCrew = 2
			title = Have at least 2 kerbals on your vessel
		}
		PARAMETER
		{
	        name = All
			type = All
			title = Land on @/targetBody1 near @/targetVessel1	
			PARAMETER
			{
		        name = ReachState
				type = ReachState
				situation = LANDED
				targetBody = @/targetBody1
				title = Land on @/targetBody1
				hideChildren = true	
			}
			PARAMETER
			{
                name = VisitWaypoint
				type = VisitWaypoint
				index = 0
				distance = 100.0
				title = Near @/targetVessel1
			}
	    }
        PARAMETER
		{
            name = BoardBase
			type = VesselParameterGroup
			title = Board 2 Kerbals on @/targetVessel1
			vessel = @/targetVessel1
			PARAMETER
			{
                name = BoardBase1
				type = HasCrew
				minCrew = @/targetVessel1.CrewCount()
				title = Leave on @/targetVessel1 at least 2 kerbals.
		    }
	        }
	    PARAMETER
        {
            name = RecoverKerbal
			type = RecoverKerbal
			kerbal = @/targetKerbal1
			title = Bring back @/targetKerbal1
		}	
	    PARAMETER
		{
		    name = RecoverKerbal
			type = RecoverKerbal
			kerbal = @/targetKerbal2
			title = Bring back @/targetKerbal2
		}

    }
	BEHAVIOUR
    {
        name = WaypointGenerator
		type = WaypointGenerator
		WAYPOINT
        {    name = Base
		     targetBody = @/targetVessel1.CelestialBody()
			 icon = balloon
			 altitude = 0.0
			 latitude = @/vesselLocation.Latitude()
			 longitude = @/vesselLocation.Longitude()
        }
    }
    REQUIREMENT
    { 
        name = CompleteContract
		type = CompleteContract
		contractType = BaseCrewRotation
		minCount = 0
		cooldownDuration = 6d
    } 	
	REQUIREMENT:NEEDS[TACLifeSupport|LifeSupport|IFILifeSupport]
    { 
        name = CompleteContract
		type = CompleteContract
		contractType = BaseResupply
		minCount = 1
		cooldownDuration = 3d
    }
    REQUIREMENT
    { 
        name = CompleteContract
		type = CompleteContract
		contractType = BaseCreate
		minCount = 0
		cooldownDuration = 7d
    }
}