CONTRACT_TYPE
{
    name = BaseCommsLost
    title = Communication problems on board @/targetVessel1
    group = BaseMaintenance
	description = We have told @/targetKerbal1 to change the antenna but, since we've told him to do that there's no communication with @/targetVessel1 .
    synopsis = Send a new vessel to @/targetVessel1 to check what's happening.
    completedMessage = We have recovered Communication with @/targetVessel1 Thanks a lot!
    minExpiry = 1
    maxExpiry = 7
	maxSimultaneous = 1
    deadline = Random(500,1000)
    cancellable = false
    declinable = true
    rewardScience = 0.0
    rewardReputation = Random(10.0, 20.0)
    rewardFunds = Random(40000, 60000.0)
    failureReputation = Random(5, 10.0)
    failureFunds = Random(1000, 10000.0)
    advanceFunds = Random(1000, 10000.0)
	targetBody = @/targetBody1
    weight = 5.0
    DATA
    {
        type = Vessel
		requiredValue = true
		targetVessel1 = [ Any ].Where(v => v.VesselType()== Base).Concat([ Base1 ]).Where(v => v.IsLanded()).Random()
    }
	DATA
	{
        type = Location
		vesselLocation = @/targetVessel1.Location()
    }
	DATA
	{
        type = CelestialBody
		requiredValue = true
		targetBody1 = @/targetVessel1.CelestialBody()
    }
	DATA
	{
		type = Kerbal
		uniqueValue = true
		targetKerbal1 = @/targetVessel1.Crew().Random()
	}    
	DATA
	{
        type = Location
		vesselLocation = @/targetVessel1.Location()
    }
	BEHAVIOUR
    {
        name = WaypointGenerator
		type = WaypointGenerator
		WAYPOINT
        {    name = Landing Spot
		     targetBody = @/targetBody1
			 icon = balloon
			 altitude = 0.0
			 latitude = @/vesselLocation.Latitude()
			 longitude = @/vesselLocation.Longitude()
        }
    }
	PARAMETER
    {
        name = NewVessel1
		type = NewVessel
    }
	PARAMETER
	{
	    name = All1
		type = All
		title = Land near the @/targetBody1 Base
		PARAMETER
        {
            name = Land
			disableOnStateChange = true
			type = ReachState
			hideChildren = true
			title = Land on @/targetBody1
			targetBody = @/targetBody1
			situation = LANDED		
        }
		PARAMETER
        {
            name = VisitWaypoint
			type = VisitWaypoint
			index = 0	
			distance = 100.0
			title = Near the @/targetBody1 Base 
	    }
	}
	BEHAVIOUR
    {
        name = ChangeVesselOwnership
		type = ChangeVesselOwnership
		onState = ContractAccepted
		vessel = @/targetVessel1
		owned = false
    }
	BEHAVIOUR
    {
        name = ChangeVesselOwnership2
		type = ChangeVesselOwnership
		onState = ContractCompletedSuccess
		parameter = NewVessel1
		vessel = @/targetVessel1
		owned = true
    }
	BEHAVIOUR
    {
        name = ChangeVesselOwnership3
		type = ChangeVesselOwnership
		onState = ContractCompletedFailure
		vessel = @/targetVessel1
		owned = true
    }
   	REQUIREMENT
    {
        name = CompleteContract
		type = CompleteContract
		contractType = BaseCommsLost
		minCount = 0
		cooldownDuration = Random(7d, 15d )
	}
}