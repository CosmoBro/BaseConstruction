CONTRACT_TYPE
{
	name = BaseCE  
    title = Crew Expansion for @/targetVessel1
    group = BaseCreate
	description =  The Kerbals on @/targetVessel1 are complaining about being too cramped in a small can so some extra space will be good for our kerbonauts.
    notes = We just need to bring down there to @/targetVessel1 something that can hold 4 kerbals nothing more.
    synopsis = We want you to add a new module to @/targetVessel1 that can hold 4 kerbals.   
    completedMessage = The kerbals on @/targetVessel1 would like to thank you .
    minExpiry = 0.0
    maxExpiry = 7.0
    deadline = Random(500,1000)
    cancellable = true
    declinable = true 
    autoAccept = false
    prestige = Significant   
    targetBody = @/targetBody1
	maxSimultaneous = 1   
    rewardScience = 0.0
    rewardReputation = 10.0
    rewardFunds = Random(60000, 100000)
    failureReputation = 10.00
    failureFunds = 100000.0
    advanceFunds = 1000.0
    weight = 7.0    
	DATA
    {
        type = Vessel
        requiredValue = true
        targetVessel1 = [ Base1 ].Where(v => v.IsLanded()).Where(v => v.CrewCount()>0).Random()
    }	
	DATA
	{
        type = Location
		vesselLocation = @/targetVessel1.Location()
    }
    DATA
	{
        type = CelestialBody
		requiredValue = true
		targetBody1 = @/targetVessel1.CelestialBody()
    }
	DATA
    {
        type = CelestialBody
        requiredValue = false
        targetBody2 = HomeWorld()
    }
    BEHAVIOUR
    {
        name = WaypointGenerator
		type = WaypointGenerator
		WAYPOINT
        {    name = Base
		     targetBody = @/targetBody1
			 icon = balloon
			 altitude = 0.0
			 latitude = @/vesselLocation.Latitude()
			 longitude = @/vesselLocation.Longitude()
        }
    }
	PARAMETER
    {
        name = NewVessel1
        type = VesselParameterGroup
        hideChildren = false
		define = Expansion1
        title = Launch a new base phase into @/targetBody2 orbit
        notes = The base phase must have a way to generate electric charge.	
		PARAMETER
        {
            name = Any
			type = Any
			hideChildren = true		
			title = Can Generate Power
			PARAMETER
			{
                name = Solar
				title = Solar
				type = PartValidation
				hideChildren = true
				partModule = ModuleDeployableSolarPanel
				minCount = 1 	     
			}
			PARAMETER
			{
                name = Generator
				title = RTG
				type = PartValidation
				hideChildren = true
				partModule = ModuleGenerator
				minCount = 1 
			}
			PARAMETER
			{
                name = Generator1
				title = Fuel Cell
				type = PartValidation
				hideChildren = true
				part = FuelCell
				minCount = 1 	
			}
			PARAMETER
			{
                name = Generator2
				title = Fuel Cell Array
				type = PartValidation
				hideChildren = true
				part = FuelCellArray
				minCount = 1
			}    
        }
		PARAMETER
        {
            name = Orbit
			title = Orbit @/targetBody2
			notes = The Ap and Pe must be above the atmosphere height
			type = Orbit
			targetBody = @/targetBody2
			minAltitude = @/targetBody2.AtmosphereAltitude()		
        }
	}
	PARAMETER
    {
        name = HabModule
        type = HasCrewCapacity        
        minCapacity = 4
        title = Support 4 Kerbals
    }	
	PARAMETER
    {
        name = ReachState
		type = ReachState
		targetBody = @/targetBody1
		title = Get to @/targetBody1
    }
    PARAMETER
    {
        name = VisitWaypoint
		type = VisitWaypoint
		index = 0
		distance = 100.0
		title = Land near the @/targetVessel1
	}
	REQUIREMENT
    { 
        name = CompleteContract
		type = CompleteContract
		contractType = BaseCreate
		minCount = 1
		cooldownDuration = 4d
    }
	REQUIREMENT
    { 
        name = CompleteContract
		type = CompleteContract
		contractType = BaseCE
		minCount = 0
		cooldownDuration = 8d
    }
	REQUIREMENT
    {
        name = PartModuleTypeUnlocked
        type = PartModuleTypeUnlocked
        partModuleType = Antenna
        partModuleType = Power		
    }
}