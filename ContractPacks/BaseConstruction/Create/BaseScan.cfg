CONTRACT_TYPE
{
    name = BaseScan
	group = BaseCreate 
	title = Scan for a suitable location for a new Base       
	description = Someone has told us that it was impossible to build a base outside @/targetBody2. We need to say him that he is wrong.
	synopsis = We want you to look for a location for a new Base. 
	completedMessage = You have scan the initial location of a new base.
    minExpiry = 3.0
	maxExpiry = 7.0
	deadline = 250
	cancellable = true
	declinable = true 
	autoAccept = false
	prestige = Significant
	maxSimultaneous = 1    
	rewardScience = 60.0
	rewardReputation = 10.0
	rewardFunds = 90000.0
	failureReputation = 10.0
	failureFunds = 100000.0
	advanceFunds = 1000.0
	weight = 15.0
	DATA
    { 
        type = List<CelestialBody>
		validBodies = AllBodies().Where(b => b.HasSurface() && !b.IsHomeWorld())
    }
	DATA
    {
        type = Vessel
        requiredValue = true
        targetVessel1 = [ BaseScanner ].Where(v => v.IsOrbiting()).Random()
    }	
	DATA
	{
        type = CelestialBody
		requiredValue = false
		targetBody1 = @/targetVessel1.CelestialBody()
    }
	DATA
    {
        type = CelestialBody
        requiredValue = false
        targetBody2 = HomeWorld()
    }
	DATA
    { 
        type = List<CelestialBody>
		validBodies2 = HomeWorld().Children()
    }
	PARAMETER
    {
        name = NewScaner
        type = VesselParameterGroup
        hideChildren = false
        title = Launch a new scanner into @/targetBody2 orbit
		define = BaseScanner
        notes = The Scanner must be unmanned, have an antenna and have a way to generate electric charge.
	    PARAMETER
        {
            name = HasCrew
			type = HasCrew
			hideChildren = true
			maxCrew = 0
			minCrew = 0
        }
		PARAMETER
		{
		    name = antenna1
			type = Any
			hideChildren = true
			title = Have an antenna on board			
		    PARAMETER
			{
                name = Antenna
				title = Stock Antenna
				type = PartValidation
				hideChildren = true
				partModule = ModuleDataTransmitter
				minCount = 1 
			}
			PARAMETER:NEEDS[AntennaRange]
			{
                name = Antenna
				title = AntennaRange Antenna
				type = PartValidation
				hideChildren = true
				partModule = ModuleLimitedDataTransmitter
				minCount = 1 
			}
			PARAMETER:NEEDS[RemoteTech]
			{
                name = Antenna2
				title = RT Antenna
				type = PartValidation
				hideChildren = true
				partModule = ModuleRTAntenna
				minCount = 1 
			}
		}
        PARAMETER:NEEDS[RemoteTech]
        {
		    name = KSCConnectivity
			type = KSCConnectivity
			hasConnectivity = true
			title = Have Connection to the KSC
        }		
		PARAMETER
		{
		    name = Scanner
			title = Have a Scanner on board
			type = Any
			notes = This can be a stock survey scanner or a SCANsat Altimetry Sensor
            hideChildren = true
			PARAMETER
			{
                name = Stock Scanner
				title = Stock Scanner
				type = PartValidation
				hideChildren = true
				part = SurveyScanner
				minCount = 1
			}
			PARAMETER:NEEDS[SCANsat]
			{
                name = SCANsat Scanner
				title = SCANsat Scanner
				type = PartValidation
				hideChildren = true
				part = SCANsat_Scanner
				minCount = 1
			}
		}  			
     	PARAMETER
        {
            name = Any
			type = Any
			hideChildren = true		
			title = Can Generate Power
			PARAMETER
			{
                name = Solar
				type = PartValidation
				hideChildren = true
				title = Solar
				partModule = ModuleDeployableSolarPanel
				minCount = 1 	     
			}
			PARAMETER
			{
                name = Generator
				type = PartValidation
				hideChildren = true
				title = RTG
				partModule = ModuleGenerator
				minCount = 1 
			}
			PARAMETER
			{
                name = Generator
				title= Fuel Cell
				type = PartValidation
				hideChildren = true
				part = FuelCell
				minCount = 1 	
			}
			PARAMETER
			{
                name = Generator
				title = Fuel Cell Array
				type = PartValidation
				hideChildren = true
				part = FuelCellArray
				minCount = 1
			}    
        }
	    PARAMETER
		{
            name = ReachState
			type = ReachState
			hideChildren = true
			situation = ORBITING
			targetBody = @/targetBody2
			title = Orbit @/targetBody2
        }
	}
	PARAMETER
	{
	    name = Any
		type = Any
		title = Orbit Any Celestial Body
		hideChildren = true
		notes = This Celestial Body must have surface and can't be the same any previous base.
		PARAMETER
        {
            type = ReachState
			situation = ORBITING
			hideChildren = true			
			title = Orbit @/validBodies.ElementAt(0)
			targetBody = (@/validBodies.ElementAt(0))
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(0) != null)
			}
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(0) != @/targetBody1)
			}
        } 
		PARAMETER
        { 
            type = ReachState
			situation = ORBITING
			hideChildren = true
			title = Orbit @/validBodies.ElementAt(1)
			targetBody = @/validBodies.ElementAt(1)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(1) != null
			}
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(1) != @/targetBody1)
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = ORBITING
			hideChildren = true
			title = Orbit @/validBodies.ElementAt(2)
			targetBody = @/validBodies.ElementAt(2)
			REQUIREMENT
			{
			     type = Expression
                expression = @/validBodies.ElementAt(2) != null
			}
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(2) != @/targetBody1)
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = ORBITING
			hideChildren = true
			title = Orbit @/validBodies.ElementAt(3)
			targetBody = @/validBodies.ElementAt(3)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(3) != null
			}
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(3) != @/targetBody1)
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = ORBITING
			hideChildren = true
			title = Orbit @/validBodies.ElementAt(4)
			targetBody = @/validBodies.ElementAt(4)
			REQUIREMENT
			{
			     type = Expression
                expression = @/validBodies.ElementAt(4) != null
			}
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(4) != @/targetBody1)
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = ORBITING
			hideChildren = true
			title = Orbit @/validBodies.ElementAt(5)
			targetBody = @/validBodies.ElementAt(5)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(5) != null
			}
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(5) != @/targetBody1)
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = ORBITING
			hideChildren = true
			title = Orbit @/validBodies.ElementAt(6)
			targetBody = @/validBodies.ElementAt(6)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(6) != null
			}
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(6) != @/targetBody1)
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = ORBITING
			hideChildren = true
			title = Orbit @/validBodies.ElementAt(7)
			targetBody = @/validBodies.ElementAt(7)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(7) != null
			}
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(7) != @/targetBody1)
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = ORBITING
			hideChildren = true
			title = Orbit @/validBodies.ElementAt(8)
			targetBody = @/validBodies.ElementAt(8)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(8) != null
			}
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(8) != @/targetBody1)
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = ORBITING
			hideChildren = true
			title = Orbit @/validBodies.ElementAt(9)
			targetBody = @/validBodies.ElementAt(9)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(9) != null
			}
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(9) != @/targetBody1)
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = ORBITING
			hideChildren = true
			title = Orbit @/validBodies.ElementAt(10)
			targetBody = @/validBodies.ElementAt(10)
			REQUIREMENT
			{
			   type = Expression
                expression = @/validBodies.ElementAt(10) != null
			}
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(10) != @/targetBody1)
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = ORBITING
			hideChildren = true
			title = Orbit @/validBodies.ElementAt(11)
			targetBody = @/validBodies.ElementAt(11)
			REQUIREMENT
			{
			   type = Expression
                expression = @/validBodies.ElementAt(11) != null
			}
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(11) != @/targetBody1)
			}
        }
		PARAMETER
		{
            type = ReachState
			situation = ORBITING
			hideChildren = true
			title = Orbit @/validBodies.ElementAt(12)
			targetBody = @/validBodies.ElementAt(12)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(12) != null
		    }
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(12) != @/targetBody1)
			}
        }
		PARAMETER
        {
            type = ReachState
			hideChildren = true
			title = Orbit @/validBodies.ElementAt(13)
			targetBody = @/validBodies.ElementAt(13)
			REQUIREMENT
			{
			   type = Expression
                expression = @/validBodies.ElementAt(13) != null
			}
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(13) != @/targetBody1)
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = ORBITING
			hideChildren = true
			title = Orbit @/validBodies.ElementAt(14)
			targetBody = @/validBodies.ElementAt(14)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(14) != null
			}
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(14) != @/targetBody1)
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = ORBITING
			hideChildren = true
			title = Orbit @/validBodies.ElementAt(15)
			targetBody = @/validBodies.ElementAt(15)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(15) != null
			}
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(15) != @/targetBody1)
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = ORBITING
			hideChildren = true
			title = Orbit @/validBodies.ElementAt(16)
			targetBody = @/validBodies.ElementAt(16)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(16) != null
			}
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(16) != @/targetBody1)
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = ORBITING
			hideChildren = true
			title = Orbit @/validBodies.ElementAt(17)
			targetBody = @/validBodies.ElementAt(17)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(17) != null
			}
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(17) != @/targetBody1)
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = ORBITING
			hideChildren = true
			title = Orbit @/validBodies.ElementAt(18)
			targetBody = @/validBodies.ElementAt(18)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(18) != null
			}
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(18) != @/targetBody1)
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = ORBITING
			hideChildren = true
			title = Orbit @/validBodies.ElementAt(19)
			targetBody = @/validBodies.ElementAt(19)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(19) != null
			}
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(19) != @/targetBody1)
			}
        }
	}
	BEHAVIOUR
    {
        name = ExperimentalPart
		type = ExperimentalPart
		part = SurveyScanner
		add = True
		remove = True
    }
	REQUIREMENT:NEEDS[SCANsat]
    {
        name = PartModuleUnlocked
		type = PartModuleUnlocked
		partModule = SCANsat
	}
	REQUIREMENT
	{
	    name = Orbit
		type = Orbit
		targetBody = @/targetBody2
	}
	REQUIREMENT
	{
	    name = Any12
		type = Any
	    REQUIREMENT
		{
	        name = Orbit
			type = Orbit
			targetBody = @/validBodies.ElementAt(0)
		}
		REQUIREMENT
		{
			name = Orbit
			type = Orbit
			targetBody = @/validBodies.ElementAt(1)
		}
		REQUIREMENT
		{
			name = Orbit
			type = Orbit
			targetBody = @/validBodies.ElementAt(2)
		}
	}
    REQUIREMENT
    {
        name = PartModuleTypeUnlocked
        type = PartModuleTypeUnlocked
        partModuleType = Antenna
        partModuleType = Power		
    }
	REQUIREMENT
    {
        name = CompleteContract
        type = CompleteContract
        contractType = BaseScan
        minCount = 0
        cooldownDuration = 15d
    }
}

