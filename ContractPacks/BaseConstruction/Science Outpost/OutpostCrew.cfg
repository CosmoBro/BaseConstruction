CONTRACT_TYPE
{
	name = OutpostCrew
    title = @/targetVessel1 Crew Ship 
    group = OutpostCreate
	description = Our engineers are happy to complete @/targetVessel1 but thinks that some kerbals down there will be good.
    synopsis = We want you to bring @/targetVessel1.EmptyCrewSpace() kerbals down to @/targetVessel1 .   
    completedMessage = You have colonized @/targetBody1 
    minExpiry = 0.0
    maxExpiry = 7.0
    deadline = Random(500,1000)
    cancellable = true
    declinable = true 
    autoAccept = false
    prestige = Significant   
    targetBody = @/targetBody1
	maxSimultaneous = 1   
    rewardScience = 0.0
    rewardReputation = 10.0
    rewardFunds = Random(40000, 70000)
    failureReputation = 10.00
    failureFunds = 100000.0
    advanceFunds = 1000.0
    weight = 7.0    
	DATA
    {
        type = Vessel
        requiredValue = true
        targetVessel1 = [ Outpost1 ].Where(v => v.CrewCount()==0).Where(v => v.IsLanded()).Random()
    }	
	DATA
	{
        type = Location
		vesselLocation = @targetVessel1.Location()
    }
    DATA
	{
        type = CelestialBody
		requiredValue = true
		targetBody1 = @/targetVessel1.CelestialBody()
    }
	DATA
    {
        type = CelestialBody
        requiredValue = false
        targetBody2 = HomeWorld()
    }
    BEHAVIOUR
    {
        name = WaypointGenerator
		type = WaypointGenerator
		WAYPOINT
        {    name = Outpost
		     targetBody = @/targetBody1
			 icon = balloon
			 altitude = 0.0
			 latitude = @/vesselLocation.Latitude()
			 longitude = @/vesselLocation.Longitude()
        }
    }
    PARAMETER
    {
        name = VesselParameterGroup
		type = VesselParameterGroup
		title = Have at least @/targetVessel1.EmptyCrewSpace() kerbals on the vessel.
		PARAMETER
        {
            name = HasCrew
			type = HasCrew
			minCrew = @/targetVessel1.EmptyCrewSpace()
		}
	}	
    PARAMETER
        name = Landing12
        type = All
        title = Land near @/targetVessel1		
	    PARAMETER
        {
            name = ReachState
			type = ReachState
			situation = LANDED
			targetBody = @/targetBody1
			title = Land on @/targetBody1
        }
        PARAMETER
		{
            name = VisitWaypoint
			type = VisitWaypoint
			index = 0
			distance = 100.0
			title = Near @/targetVessel1
		}
    PARAMETER
    {
        name = VesselParameterGroup
		type = VesselParameterGroup
		title = Board @/targetVessel1
		vessel = @/targetVessel1
		PARAMETER
        {
            name = HasCrew
			type = HasCrew
			minCrew = @/targetVessel1.EmptyCrewSpace()
			title = Put @/targetVessel1.EmptyCrewSpace() Kerbals on board @/targetVessel1.
		}
	}
	REQUIREMENT
    { 
        name = CompleteContract
		type = CompleteContract
		contractType = OutpostCreate
		minCount = 1
		cooldownDuration = 1d
    }
	REQUIREMENT
    { 
        name = CompleteContract
		type = CompleteContract
		contractType = OutpostCrew
		minCount = 0
		cooldownDuration = 10d
	}
}
