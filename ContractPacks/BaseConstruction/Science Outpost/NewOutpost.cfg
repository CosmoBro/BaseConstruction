CONTRACT_TYPE
{
	name = OutpostCreate	  
    title = Science outpost creation outside @/targetBody2
    group = OutpostCreate
	description = Our scientist were thinking on a way to gain science of alien planets. So that is why we need you.
    notes = Put a new outpost on any planet(Orbited) surface.
    synopsis = We want you to land a new science outpost.   
    completedMessage = You have landed the initial stage of the new outpost.
    minExpiry = 1.0
    maxExpiry = 7.0
    deadline = Random(500,1000)
    cancellable = true
    declinable = true 
    autoAccept = false
    prestige = Exceptional
	maxSimultaneous = 1 
    rewardScience = 10.0
    rewardReputation = 25.0
    rewardFunds = Random(140000, 200000)
    failureReputation = 10.00
    failureFunds = 70000.0
    advanceFunds = 1000.0
    weight = 15.0 
    DATA
    { 
        type = List<CelestialBody>
		validBodies = OrbitedBodies().Where(b => b.HasSurface() && !b.IsHomeWorld())
    }
	DATA
    {
        type = CelestialBody
        requiredValue = false
        targetBody2 = HomeWorld()
    }
	PARAMETER
    {
        name = NewOutpost
        type = VesselParameterGroup
        hideChildren = false
        title = Launch a new outpost into @/targetBody2 orbit
		define = Outpost1
        notes = The outpost must be unmanned, have a Science Lab and have a way to generate electric charge.
		PARAMETER
		{
            name = HasCrew
			type = HasCrew
			hideChildren = true
			title = Unmanned
			maxCrew = 0
			minCrew = 0
		}
        PARAMETER
	    {
	        name = ScienceLab
			type = PartValidation
			title = Have a Science Lab
			partModule = ModuleScienceLab
			minCount = 1		
	    }		
		PARAMETER
        {
            name = Any
			type = Any
			hideChildren = true		
			title = Can Generate Power
			PARAMETER
			{
                name = Solar
				title = Solar
				type = PartValidation
				hideChildren = true
				partModule = ModuleDeployableSolarPanel
				minCount = 1 	     
			}
			PARAMETER
			{
                name = Generator
				title = RTG
				type = PartValidation
				hideChildren = true
				partModule = ModuleGenerator
				minCount = 1 
			}
			PARAMETER
			{
                name = Generator1
				title = Fuel Cell
				type = PartValidation
				hideChildren = true
				part = FuelCell
				minCount = 1 	
			}
			PARAMETER
			{
                name = Generator2
				title = Fuel Cell Array
				type = PartValidation
				hideChildren = true
				part = FuelCellArray
				minCount = 1
			}    
        }
		PARAMETER
        {
            name = Orbit
			title = Orbit @/targetBody2
			notes = The Ap and Pe must be above the atmosphere height
			type = Orbit
			targetBody = @/targetBody2
			minAltitude = @/targetBody2.AtmosphereAltitude()		
        }
	}
	PARAMETER
	{
	    name = Any
		type = Any
		title = Land on any orbited Celestial body
		hideChildren = true
		notes = This Celestial Body must have surface.
		PARAMETER
        {
            type = ReachState
			situation = LANDED
			hideChildren = true			
			title = Land on @/validBodies.ElementAt(0)
			targetBody = (@/validBodies.ElementAt(0))
			REQUIREMENT
			{
			    type = Expression
                expression = (@/validBodies.ElementAt(0) != null)
			}
        } 
		PARAMETER
        { 
            type = ReachState
			situation = LANDED
			hideChildren = true
			title = Land on @/validBodies.ElementAt(1)
			targetBody = @/validBodies.ElementAt(1)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(1) != null
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = LANDED
			hideChildren = true
			title = Land on @/validBodies.ElementAt(2)
			targetBody = @/validBodies.ElementAt(2)
			REQUIREMENT
			{
			     type = Expression
                expression = @/validBodies.ElementAt(2) != null
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = LANDED
			hideChildren = true
			title = Land on @/validBodies.ElementAt(3)
			targetBody = @/validBodies.ElementAt(3)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(3) != null
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = LANDED
			hideChildren = true
			title = Land on @/validBodies.ElementAt(4)
			targetBody = @/validBodies.ElementAt(4)
			REQUIREMENT
			{
			     type = Expression
                expression = @/validBodies.ElementAt(4) != null
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = LANDED
			hideChildren = true
			title = Land on @/validBodies.ElementAt(5)
			targetBody = @/validBodies.ElementAt(5)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(5) != null
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = LANDED
			hideChildren = true
			title = Land on @/validBodies.ElementAt(6)
			targetBody = @/validBodies.ElementAt(6)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(6) != null
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = LANDED
			hideChildren = true
			title = Land on @/validBodies.ElementAt(7)
			targetBody = @/validBodies.ElementAt(7)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(7) != null
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = LANDED
			hideChildren = true
			title = Land on @/validBodies.ElementAt(8)
			targetBody = @/validBodies.ElementAt(8)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(8) != null
			}
		}
		PARAMETER
        {
            type = ReachState
			situation = LANDED
			hideChildren = true
			title = Land on @/validBodies.ElementAt(9)
			targetBody = @/validBodies.ElementAt(9)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(9) != null
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = LANDED
			hideChildren = true
			title = Land on @/validBodies.ElementAt(10)
			targetBody = @/validBodies.ElementAt(10)
			REQUIREMENT
			{
			   type = Expression
                expression = @/validBodies.ElementAt(10) != null
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = LANDED
			hideChildren = true
			title = Land on @/validBodies.ElementAt(11)
			targetBody = @/validBodies.ElementAt(11)
			REQUIREMENT
			{
			   type = Expression
                expression = @/validBodies.ElementAt(11) != null
			}
        }
		PARAMETER
		{
            type = ReachState
			situation = LANDED
			hideChildren = true
			title = Land on @/validBodies.ElementAt(12)
			targetBody = @/validBodies.ElementAt(12)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(12) != null
		    }
        }
		PARAMETER
        {
            type = ReachState
			situation = LANDED
			hideChildren = true
			title = Land on @/validBodies.ElementAt(13)
			targetBody = @/validBodies.ElementAt(13)
			REQUIREMENT
			{
			   type = Expression
                expression = @/validBodies.ElementAt(13) != null
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = LANDED
			hideChildren = true
			title = Land on @/validBodies.ElementAt(14)
			targetBody = @/validBodies.ElementAt(14)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(14) != null
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = LANDED
			hideChildren = true
			title = Land on @/validBodies.ElementAt(15)
			targetBody = @/validBodies.ElementAt(15)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(15) != null
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = LANDED
			hideChildren = true
			title = Land on @/validBodies.ElementAt(16)
			targetBody = @/validBodies.ElementAt(16)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(16) != null
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = LANDED
			hideChildren = true
			title = Land on @/validBodies.ElementAt(17)
			targetBody = @/validBodies.ElementAt(17)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(17) != null
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = LANDED
			hideChildren = true
			title = Land on @/validBodies.ElementAt(18)
			targetBody = @/validBodies.ElementAt(18)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(18) != null
			}
        }
		PARAMETER
        {
            type = ReachState
			situation = LANDED
			hideChildren = true
			title = Land on @/validBodies.ElementAt(19)
			targetBody = @/validBodies.ElementAt(19)
			REQUIREMENT
			{
			    type = Expression
                expression = @/validBodies.ElementAt(19) != null
			}
        }
	}
	REQUIREMENT
    {
        name = AntennaAndPowerGenerationUnlocked
        type = PartModuleTypeUnlocked
        partModuleType = Antenna
        partModuleType = Power		
    }
	REQUIREMENT
    {
        name = ScienceLabUnlocked
        type = PartModuleUnlocked
        partModule = ModuleScienceLab
    }
	REQUIREMENT
    {
        name = CompleteContract
        type = CompleteContract
        contractType = OutpostCreate
        minCount = 0
        cooldownDuration = 10d
    }
	REQUIREMENT
	{
	    name = OrbitHomeworld
		type = Orbit
		targetBody = @/targetBody2
	}
	REQUIREMENT
	{
	    name = MoreThanTwoOrbitedBodies
		type = Expression
		expression = (@/validBodies.Count() >= 2)
	}
}
