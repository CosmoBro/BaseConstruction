CONTRACT_TYPE
{
    //Credits to Severedsolo
    name = BaseMedicalEmergency
    title = Medical Emergency on board @/targetVessel1
    group = BaseMaintenance
	description = Oh dear! Poor @/targetKerbal1 is feeling quite poorly. Just to be safe, we'd like you to bring him home.
    synopsis = Bring @/targetKerbal1 back to Kerbin for medical examination
    completedMessage = Our Medics tell me that @/targetKerbal1 is going to make it. Thanks to you!
    minExpiry = 1
    maxExpiry = 7
	maxSimultaneous = 1
    deadline = Random(500,1000)
    cancellable = false
    declinable = true
    rewardScience = 0.0
    rewardReputation = 10.0
    rewardFunds = Random(40000.0, 80000)
    failureReputation = 5.0
    failureFunds = 10000.0
    advanceFunds = 10000.0
    DATA
    {
        type = Vessel
        requiredValue = true
        targetVessel1 = [ Any, Base1, Base2 ].Where(v => v.CrewCount()>0).Where(v => v.IsLanded()).Where(v => v.VesselType()== Base).Random()
    }
	DATA
	{
        type = CelestialBody
		requiredValue = true
		targetBody1 = @/targetVessel1.CelestialBody()
    }
	DATA
	{
		type = Kerbal
		uniqueValue = true
		targetKerbal1 = @targetVessel1.Crew().Random()
	}    
	DATA
	{
        type = Location
		vesselLocation = @targetVessel1.Location()
    }
	PARAMETER
	{
		name = RecoverKerbal
		type = RecoverKerbal
		kerbal = @/targetKerbal1
		title = Recover @/targetKerbal1
	}
	PARAMETER
	{
	    name = All
		type = All
		title = Land on @/targetBody1 near @/targetVessel1
	    PARAMETER
		{
            name = VisitWaypoint
			type = VisitWaypoint
			index = 0
			distance = 100.0
			title = Near @/targetVessel1
		}
		PARAMETER
		{
		    name = ReachState
			type = ReachState
			situation = LANDED
			targetBody = @/targetBody1
			title = Land on @/targetBody1
			hideChildren = true	
		}
	}
    BEHAVIOUR
    {
        name = WaypointGenerator
		type = WaypointGenerator
		WAYPOINT
        {    name = Base
		     targetBody = @/targetBody1
			 icon = balloon
			 altitude = 0.0
			 latitude = @/vesselLocation.Latitude()
			 longitude = @/vesselLocation.Longitude()
        }
    }
	REQUIREMENT
    {
        name = CompleteContract
		type = CompleteContract
		contractType = BaseMedicalEmergency
		minCount = 0
		cooldownDuration = Random(7d, 15d )
	}
}