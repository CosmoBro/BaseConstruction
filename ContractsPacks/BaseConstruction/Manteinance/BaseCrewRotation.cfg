CONTRACT_TYPE
{
    name = CrewRotation
    title = Do a crew rotation to @/targetVessel1.
    group = BaseMaintenance
	description = Oh no, @/targetKerbal1 forgot his marriage aniversary so bring him back to @/targetBody2 right now. Also @/targetKerbal2 is feeling a little homesick so bring him back too.
    synopsis = Bring back to @/targetBody2 @/targetKerbal1 and @/targetKerbal1 .
    completedMessage = Uff @/targetKerbal1 would like to thank you. He get just in time.
    minExpiry = 1
    maxExpiry = 7
    deadline = Random(500, 700)
    cancellable = true
    declinable = true
	maxSimultaneous = 1
    rewardScience = 0.0
    rewardReputation = Random(1.0, 20.0)
    rewardFunds = Random(40000, 60000.0)
    failureReputation = Random(1, 10.0)
    failureFunds = Random(1, 10000.0)
    advanceFunds = Random(1, 10000.0)
    weight = 5.0
	DATA
    {
        type = Vessel
        requiredValue = true
        targetVessel1 = [ Any, Base1, Base2 ].Where(v => v.CrewCount()>=2).Where(v => v.IsLanded()).Where(v => v.VesselType()== Base).Random()
    }
	DATA
    {
        type = CelestialBody
        requiredValue = false
        targetBody2 = HomeWorld()
    }
	DATA
	{
		type = Kerbal
		uniqueValue = true
		targetKerbal1 = @/targetVessel1.Crew().Random()
	}
	DATA
	{
		type = Kerbal
		uniqueValue = true
		targetKerbal2 = @/targetVessel1.Crew().Random()
	}
    DATA
	{
        type = Location
		vesselLocation = @/targetVessel1.Location()	
    }
	PARAMETER
{
    name = Sequence
    type = Sequence
    title = Do a crew rotation
	PARAMETER
    {
        name = HasCrew
		type = HasCrew
		disableOnStateChange = true
		minCrew = 2
		title = Have at least 2 kerbals on your vessel
    }
    PARAMETER
	{
	    name = All
		type = All
		title = Land on @/targetBody1 near @/targetVessel1		
		PARAMETER
		{
		    name = ReachState
			type = ReachState
			situation = LANDED
			targetBody = @/targetBody1
			title = Land on @/targetBody1
			hideChildren = true	
		}
	    PARAMETER
		{
            name = VisitWaypoint
			type = VisitWaypoint
			index = 0
			distance = 100.0
			title = Near @/targetVessel1
		}
	}
   PARAMETER
    {
        name = BoardBase
		type = VesselParameterGroup
		title = Board 2 Kerbals on @/targetVessel1
		vessel = @/targetVessel1
		PARAMETER
        {
            name = BoardBase1
			type = HasCrew
			minCrew = @/targetVessel1.CrewCount()
			title = Leave on @/targetVessel1 at least 2 kerbals.
		}
	}
	PARAMETER
    {
        name = RecoverKerbal
		type = RecoverKerbal
		kerbal = @/targetKerbal1
		title = Bring back @/targetKerbal1
    }	
	PARAMETER
    {
        name = RecoverKerbal
		type = RecoverKerbal
		kerbal = @/targetKerbal2
		title = Bring back @/targetKerbal2
    }

}
	 BEHAVIOUR
    {
        name = WaypointGenerator
		type = WaypointGenerator
		WAYPOINT
        {    name = Base
		     targetBody = @/targetVessel1.CelestialBody()
			 icon = balloon
			 altitude = 0.0
			 latitude = @/vesselLocation.Latitude()
			 longitude = @/vesselLocation.Longitude()
        }
    }
    REQUIREMENT
    { 
        name = CompleteContract
		type = CompleteContract
		contractType = CrewRotation
		minCount = 0
		cooldownDuration = 5d
    } 	
	REQUIREMENT:NEEDS[TACLifeSupport|LifeSupport|IFILifeSupport]
    { 
        name = CompleteContract
		type = CompleteContract
		contractType = BaseResupply
		minCount = 1
		cooldownDuration = 3d
    }
    REQUIREMENT
    { 
        name = CompleteContract
		type = CompleteContract
		contractType = BaseCreate
		minCount = 1
		cooldownDuration = 7d
    } 	 
}