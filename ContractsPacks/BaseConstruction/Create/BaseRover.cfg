CONTRACT_TYPE
{
	name = BaseRover	  
    title = Land a Rover on @/targetBody1 for the new Base
	description = Some of our engineers were arguing about where to put a base on @/targetBody1 surface since the photos taked by the scanning device weren't exactly the best when a guy come in and say "Why don't you take a rover into @/targetBody1 's surface?" so this is were you come in.
    notes = Remember to leave the Rover near where you whant to make the base.
	group = BaseCreate
    synopsis = We want you to look for a flat place for the  Base.   
    completedMessage = You have found a flat place for the  Base.
    minExpiry = 1.0
    maxExpiry = 7.0
    deadline = Random(500,1000)
    cancellable = true
    declinable = true 
    autoAccept = false
    prestige = Significant   
    maxCompletions = 1
	maxSimultaneous = 1  
    rewardScience = 110.0
    rewardReputation = 20.0
    rewardFunds = Random(100000, 170000)
    failureReputation = 20.0
    failureFunds = 10000.0
    advanceFunds = 1000.0
    weight = 15.0
	DATA
    {
        type = Vessel
        requiredValue = true
        targetVessel1 = [ BaseScanner ].Where(v => v.IsOrbiting()).Random()
    }	
	DATA
	{
        type = CelestialBody
		requiredValue = false
		targetBody1 = @/targetVessel1.CelestialBody()
    }
    DATA
    {
        type = CelestialBody
        requiredValue = false
        targetBody2 = HomeWorld()
    }    
    PARAMETER
    {
        name = NewRover
        type = VesselParameterGroup
        hideChildren = false
        title = Launch a new rover into @/targetBody2 orbit
		define = BaseRover
        notes = The rover must be unmanned, have 4 wheels and have a way to generate electric charge.
		
        PARAMETER
        {
            name = HasCrew
			type = HasCrew
			title = Unamanned
			maxCrew = 0
			minCrew = 0
        }
		PARAMETER
        {
            name = Wheel
			type = PartValidation
			title = Have 4 wheels
			partModule = ModuleWheel
			minCount = 4	   
	    }
		PARAMETER
        {
            name = Any
			type = Any
			hideChildren = true		
			title = Can Generate Power
			PARAMETER
			{
                name = Solar
				title = Solar
				type = PartValidation
				hideChildren = true
				partModule = ModuleDeployableSolarPanel
				minCount = 1 	     
			}
			PARAMETER
			{
                name = Generator
				title = RTG
				type = PartValidation
				hideChildren = true
				partModule = ModuleGenerator
				minCount = 1 
			}
			PARAMETER
			{
                name = Generator1
				title = Fuel Cell
				type = PartValidation
				hideChildren = true
				part = FuelCell
				minCount = 1 	
			}
			PARAMETER
			{
                name = Generator2
				title = Fuel Cell Array
				type = PartValidation
				hideChildren = true
				part = FuelCellArray
				minCount = 1
			}    
        }
		PARAMETER
        {
            name = Orbit
			title = Orbit @/targetBody2			
			notes = The Ap and Pe must be above the atmosphere height
			type = Orbit
			targetBody = @/targetBody2
			minAltitude = @/targetBody2.AtmosphereAltitude()		
        }		
	}
	PARAMETER
    {
        name = ReachState
		type = ReachState
		targetBody = @/targetBody1
		title = Get to @/targetBody1
    }	
    PARAMETER
    {
        name = Land
		disableOnStateChange = true
		type = ReachState
		title = Land on @/targetBody1
		targetBody = @/targetBody1
		situation = LANDED		
    }
	PARAMETER
    {
        name = Duration
		type = Duration
		duration = 5m
		preWaitText = Complete all parameters
		waitingText = Find a flat place for the Base
		completionText = Leave the rover near where you want to land the base
    }
    REQUIREMENT
    {
        name = PartModuleUnlocked
        type = PartModuleUnlocked
        partModule = ModuleWheel
    }
	REQUIREMENT
    {
        name = CompleteContract
        type = CompleteContract
        contractType = BaseScan
        minCount = 1
        cooldownDuration = 4h
    }
}
CONTRACT_TYPE
{
	name = BaseRoverTwo	  
    title = Land a Rover on @/targetBody1 for the new Base
	description = Some of our engineers were arguing about where to put a base on @/targetBody1 's surface since the photos taked by the scanning device weren't exactly the best when a guy come in and say "Why don't you take a rover into @/targetBody1 's surface?" so this is were you come in.
    group = BaseCreate
    synopsis = We want you to look for a flat place for the new Base.   
    completedMessage = You have found a flat place for the  Base.
    minExpiry = 1.0
    maxExpiry = 7.0
    deadline = Random(500,1000)
    cancellable = true
    declinable = true 
    autoAccept = false
    prestige = Significant   
    maxCompletions = 1
	maxSimultaneous = 1  
    rewardScience = 110.0
    rewardReputation = 20.0
    rewardFunds = Random(100000, 170000)
    failureReputation = 20.0
    failureFunds = 10000.0
    advanceFunds = 1000.0
    weight = 15.0
	DATA
    {
        type = Vessel
        requiredValue = true
        targetVessel1 = [ BaseScanner2 ].Where(v => v.IsOrbiting()).Random()
    }	
	DATA
	{
        type = CelestialBody
		requiredValue = false
		targetBody1 = @/targetVessel1.CelestialBody()
    }
    DATA
    {
        type = CelestialBody
        requiredValue = false
        targetBody2 = HomeWorld()
    }    
    PARAMETER
    {
        name = NewRover
        type = VesselParameterGroup
        hideChildren = false
        title = Launch a new rover into @/targetBody2 orbit
		define = BaseRover2
        notes = The rover must be unmanned, have 4 wheels and have a way to generate electric charge.		
        PARAMETER
        {
            name = HasCrew
			type = HasCrew
			title = Unamanned
			maxCrew = 0
			minCrew = 0
        }
		PARAMETER
        {
            name = Wheel
			type = PartValidation
			title = Have 4 wheels
			partModule = ModuleWheel
			minCount = 4	   
	    }
		PARAMETER
        {
            name = Orbit
			title = Orbit @/targetBody2			
			notes = The Ap and Pe must be above the atmosphere height
			type = Orbit
			targetBody = @/targetBody2
			minAltitude = @/targetBody2.AtmosphereAltitude()		
        }
		PARAMETER
        {
            name = Any
			type = Any
			hideChildren = true		
			title = Can Generate Power
			PARAMETER
			{
                name = Solar
				title = Solar
				type = PartValidation
				hideChildren = true
				partModule = ModuleDeployableSolarPanel
				minCount = 1 	     
			}
			PARAMETER
			{
                name = Generator
				title = RTG
				type = PartValidation
				hideChildren = true
				partModule = ModuleGenerator
				minCount = 1 
			}
			PARAMETER
			{
                name = Generator1
				title = Fuel Cell
				type = PartValidation
				hideChildren = true
				part = FuelCell
				minCount = 1 	
			}
			PARAMETER
			{
                name = Generator2
				title = Fuel Cell Array
				type = PartValidation
				hideChildren = true
				part = FuelCellArray
				minCount = 1
			}    
        }	
	}
	PARAMETER
    {
        name = ReachState
		type = ReachState
		targetBody = @/targetBody1
		title = Get to @/targetBody1
		hideChildren = true
    }
	PARAMETER
	{
	    disableOnStateChange = true
        name = Land
		hideChildren = true
		type = ReachState
		title = Land on @/targetBody1
		targetBody = @/targetBody1
		situation = LANDED		
    }
	
	PARAMETER
    {
        name = Duration
		type = Duration
		duration = 5m
		preWaitText = Complete all parameters
		waitingText = Find a flat place for the Base
		completionText = Leave the rover near where you want to land the base
    }
    REQUIREMENT
    {
        name = PartModuleUnlocked
        type = PartModuleUnlocked
        partModule = ModuleWheel
    }
	REQUIREMENT
    {
        name = CompleteContract
        type = CompleteContract
        contractType = BaseScanTwo
        minCount = 1
        cooldownDuration = 2h
    }
}